@use "../../../styles/mixins" as *;

.Card {
  @include button-reset;

  width: var(--card-width);
  height: var(--card-height);
  border: solid var(--card-border-width) var(--color-black);
  background-color: var(--color-white);
  border-radius: var(--card-border-radius);

  font-size: calc(var(--card-width) * 0.4);

  pointer-events: initial !important;

  :global(.keyboard-focus) &:focus {
    @include keyboard-focus;
  }
}

.isHandCard {
  // getting the pos variables from the object
  position: absolute;
  left: calc(
    var(--card-margin) + (var(--card-width) + var(--card-margin)) *
      var(--card-pos-x)
  );
  top: calc(
    var(--card-margin) - var(--card-border-width) * 2 +
      (var(--card-height) + var(--card-margin)) * var(--card-pos-y)
  );
}

/*.Card:hover {
  box-shadow: var(--color-interaction) 0px 0px 0px 4px;
}*/

.isSwapped {
  background-color: var(--color-swap);
}

.isLookedAt {
  background-color: var(--color-lookAt);

  &.isBlack {
    color: var(--color-black-STAY);
  }
}

.isDrawn {
  background-color: var(--color-draw);
}

.isRed {
  color: var(--color-red);
}

.isBack {
}

.isDeck {
  // --card-count

  height: calc(var(--card-height) + var(--card-count) / 3);
  border-bottom-width: calc(2px + var(--card-count) / 3);
}

.isSelected {
  background-color: var(--color-select);
}

.isClickable {
  box-shadow: var(--color-highlight) 0px 0px 0px 3px;
  cursor: pointer;
}

.Card.isClickable:hover {
  box-shadow: var(--color-interaction) 0px 0px 0px 6px;
}

.Inner {
  @include center-children;
  flex-direction: column;
  gap: 0.2em;
  line-height: 1;

  height: 100%;
  width: 100%;

  .isSpecator.isBack & {
    opacity: 0.5;
  }
}

.BackArtwork {
  position: absolute;
  top: 2px;
  left: 2px;
  bottom: 2px;
  right: 2px;
  background-image: url("/CardBack.png");
  background-size: 30px 30px;

  .isSpecator & {
    opacity: 0.5;
  }
}
@media (prefers-color-scheme: dark) {
  .BackArtwork {
    filter: invert(100%) contrast(2);
  }
}

.Number {
  font-weight: bold;
}
.Symbol {
}

.Joker {
  font-size: calc(var(--card-width) * 0.75);
}
